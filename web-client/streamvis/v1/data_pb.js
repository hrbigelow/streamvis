// @generated by protoc-gen-es v2.9.0 with parameter "target=js"
// @generated from file streamvis/v1/data.proto (package streamvis.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file streamvis/v1/data.proto.
 */
export const file_streamvis_v1_data = /*@__PURE__*/
  fileDesc("ChdzdHJlYW12aXMvdjEvZGF0YS5wcm90bxIMc3RyZWFtdmlzLnYxIkgKBEF4aXMSIgoFZHR5cGUYASABKA4yEy5zdHJlYW12aXMudjEuRFR5cGUSDgoGbGVuZ3RoGAIgASgNEgwKBGRhdGEYAyABKAwiOQoFRmllbGQSDAoEbmFtZRgBIAEoCRIiCgVkdHlwZRgCIAEoDjITLnN0cmVhbXZpcy52MS5EVHlwZSJSCgVTY29wZRIQCghzY29wZV9pZBgBIAEoDRINCgVzY29wZRgCIAEoCRIoCgR0aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJcCgROYW1lEg8KB25hbWVfaWQYASABKA0SEAoIc2NvcGVfaWQYAiABKA0SDAoEbmFtZRgDIAEoCRIjCgZmaWVsZHMYBCADKAsyEy5zdHJlYW12aXMudjEuRmllbGQiTAoHQ29udHJvbBINCgVzY29wZRgBIAEoCRIMCgRuYW1lGAIgASgJEiQKBmFjdGlvbhgDIAEoDjIULnN0cmVhbXZpcy52MS5BY3Rpb24iVgoJRGF0YUVudHJ5EhAKCGVudHJ5X2lkGAEgASgNEg8KB25hbWVfaWQYAiABKA0SEgoKYmVnX29mZnNldBgDIAEoBBISCgplbmRfb2Zmc2V0GAQgASgEIlkKC0NvbmZpZ0VudHJ5EhAKCGVudHJ5X2lkGAEgASgNEhAKCHNjb3BlX2lkGAIgASgNEhIKCmJlZ19vZmZzZXQYAyABKAQSEgoKZW5kX29mZnNldBgEIAEoBCJaCgREYXRhEhAKCGVudHJ5X2lkGAEgASgNEg0KBWluZGV4GAIgASgNEiAKBGF4ZXMYAyADKAsyEi5zdHJlYW12aXMudjEuQXhpcxIPCgduYW1lX2lkGAQgASgNIlkKBkNvbmZpZxIQCghlbnRyeV9pZBgBIAEoDRIrCgphdHRyaWJ1dGVzGAIgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBIQCghzY29wZV9pZBgDIAEoDSKzAgoGU3RvcmVkEiQKBXNjb3BlGAEgASgLMhMuc3RyZWFtdmlzLnYxLlNjb3BlSAASIgoEbmFtZRgCIAEoCzISLnN0cmVhbXZpcy52MS5OYW1lSAASKAoHY29udHJvbBgDIAEoCzIVLnN0cmVhbXZpcy52MS5Db250cm9sSAASLQoKZGF0YV9lbnRyeRgEIAEoCzIXLnN0cmVhbXZpcy52MS5EYXRhRW50cnlIABIxCgxjb25maWdfZW50cnkYBSABKAsyGS5zdHJlYW12aXMudjEuQ29uZmlnRW50cnlIABIiCgRkYXRhGAYgASgLMhIuc3RyZWFtdmlzLnYxLkRhdGFIABImCgZjb25maWcYByABKAsyFC5zdHJlYW12aXMudjEuQ29uZmlnSABCBwoFdmFsdWUiTwoLRGF0YVJlcXVlc3QSFQoNc2NvcGVfcGF0dGVybhgBIAEoCRIUCgxuYW1lX3BhdHRlcm4YAiABKAkSEwoLZmlsZV9vZmZzZXQYAyABKAQilwIKDFJlY29yZFJlc3VsdBI2CgZzY29wZXMYASADKAsyJi5zdHJlYW12aXMudjEuUmVjb3JkUmVzdWx0LlNjb3Blc0VudHJ5EjQKBW5hbWVzGAIgAygLMiUuc3RyZWFtdmlzLnYxLlJlY29yZFJlc3VsdC5OYW1lc0VudHJ5EhMKC2ZpbGVfb2Zmc2V0GAMgASgEGkIKC1Njb3Blc0VudHJ5EgsKA2tleRgBIAEoDRIiCgV2YWx1ZRgCIAEoCzITLnN0cmVhbXZpcy52MS5TY29wZToCOAEaQAoKTmFtZXNFbnRyeRILCgNrZXkYASABKA0SIQoFdmFsdWUYAiABKAsyEi5zdHJlYW12aXMudjEuTmFtZToCOAEiDgoMU2NvcGVSZXF1ZXN0IhwKC1Njb3BlUmVzdWx0Eg0KBXNjb3BlGAEgASgJIh0KDE5hbWVzUmVxdWVzdBINCgVzY29wZRgBIAEoCSIeCg1Db25maWdSZXF1ZXN0Eg0KBXNjb3BlGAEgASgJImwKDENvbmZpZ1Jlc3VsdBIrCgVpbmRleBgBIAEoCzIaLnN0cmVhbXZpcy52MS5SZWNvcmRSZXN1bHRIABImCgZjb25maWcYAiABKAsyFC5zdHJlYW12aXMudjEuQ29uZmlnSABCBwoFdmFsdWUiIgoDVGFnEg0KBXNjb3BlGAEgASgJEgwKBG5hbWUYAiABKAki0gEKCFN0cmVhbWVkEisKBWluZGV4GAEgASgLMhouc3RyZWFtdmlzLnYxLlJlY29yZFJlc3VsdEgAEiIKBGRhdGEYAiABKAsyEi5zdHJlYW12aXMudjEuRGF0YUgAEiIKBG5hbWUYAyABKAsyEi5zdHJlYW12aXMudjEuTmFtZUgAEiYKBmNvbmZpZxgEIAEoCzIULnN0cmVhbXZpcy52MS5Db25maWdIABIgCgN0YWcYBSABKAsyES5zdHJlYW12aXMudjEuVGFnSABCBwoFdmFsdWUiZwoKRGF0YVJlc3VsdBIsCgZyZWNvcmQYASABKAsyGi5zdHJlYW12aXMudjEuUmVjb3JkUmVzdWx0SAASIgoEZGF0YRgCIAEoCzISLnN0cmVhbXZpcy52MS5EYXRhSABCBwoFdmFsdWUiUwoSV3JpdGVDb25maWdSZXF1ZXN0EhAKCHNjb3BlX2lkGAEgASgNEisKCmF0dHJpYnV0ZXMYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0IiIKEVdyaXRlU2NvcGVSZXF1ZXN0Eg0KBXNjb3BlGAEgASgJIjUKEFdyaXRlTmFtZVJlcXVlc3QSIQoFbmFtZXMYASADKAsyEi5zdHJlYW12aXMudjEuTmFtZSIwChBEZWxldGVUYWdSZXF1ZXN0Eg0KBXNjb3BlGAEgASgJEg0KBW5hbWVzGAIgAygJIhMKEURlbGV0ZVRhZ1Jlc3BvbnNlIjUKEFdyaXRlRGF0YVJlcXVlc3QSIQoFZGF0YXMYASADKAsyEi5zdHJlYW12aXMudjEuRGF0YSITChFXcml0ZURhdGFSZXNwb25zZSImChJXcml0ZVNjb3BlUmVzcG9uc2USEAoIc2NvcGVfaWQYASABKA0iNgoRV3JpdGVOYW1lUmVzcG9uc2USIQoFbmFtZXMYASADKAsyEi5zdHJlYW12aXMudjEuTmFtZSIVChNXcml0ZUNvbmZpZ1Jlc3BvbnNlKj8KBURUeXBlEhYKEkRfVFlQRV9VTlNQRUNJRklFRBAAEg4KCkRfVFlQRV9GMzIQARIOCgpEX1RZUEVfSTMyEAIqUQoGQWN0aW9uEhYKEkFDVElPTl9VTlNQRUNJRklFRBAAEhcKE0FDVElPTl9ERUxFVEVfU0NPUEUQARIWChJBQ1RJT05fREVMRVRFX05BTUUQAjKnBQoHU2VydmljZRJCCglRdWVyeURhdGESGS5zdHJlYW12aXMudjEuRGF0YVJlcXVlc3QaGC5zdHJlYW12aXMudjEuRGF0YVJlc3VsdDABEkEKBlNjb3BlcxIaLnN0cmVhbXZpcy52MS5TY29wZVJlcXVlc3QaGS5zdHJlYW12aXMudjEuU2NvcGVSZXN1bHQwARI4CgVOYW1lcxIaLnN0cmVhbXZpcy52MS5OYW1lc1JlcXVlc3QaES5zdHJlYW12aXMudjEuVGFnMAESRAoHQ29uZmlncxIbLnN0cmVhbXZpcy52MS5Db25maWdSZXF1ZXN0Ghouc3RyZWFtdmlzLnYxLkNvbmZpZ1Jlc3VsdDABEk8KCldyaXRlU2NvcGUSHy5zdHJlYW12aXMudjEuV3JpdGVTY29wZVJlcXVlc3QaIC5zdHJlYW12aXMudjEuV3JpdGVTY29wZVJlc3BvbnNlElIKC1dyaXRlQ29uZmlnEiAuc3RyZWFtdmlzLnYxLldyaXRlQ29uZmlnUmVxdWVzdBohLnN0cmVhbXZpcy52MS5Xcml0ZUNvbmZpZ1Jlc3BvbnNlEk0KCldyaXRlTmFtZXMSHi5zdHJlYW12aXMudjEuV3JpdGVOYW1lUmVxdWVzdBofLnN0cmVhbXZpcy52MS5Xcml0ZU5hbWVSZXNwb25zZRJTChBEZWxldGVTY29wZU5hbWVzEh4uc3RyZWFtdmlzLnYxLkRlbGV0ZVRhZ1JlcXVlc3QaHy5zdHJlYW12aXMudjEuRGVsZXRlVGFnUmVzcG9uc2USTAoJV3JpdGVEYXRhEh4uc3RyZWFtdmlzLnYxLldyaXRlRGF0YVJlcXVlc3QaHy5zdHJlYW12aXMudjEuV3JpdGVEYXRhUmVzcG9uc2VCKlooZGF0YS1zZXJ2ZXIvcGIvc3RyZWFtdmlzL3YxO3N0cmVhbXZpc192MWIGcHJvdG8z", [file_google_protobuf_struct, file_google_protobuf_timestamp]);

/**
 * Describes the message streamvis.v1.Axis.
 * Use `create(AxisSchema)` to create a new message.
 */
export const AxisSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 0);

/**
 * Describes the message streamvis.v1.Field.
 * Use `create(FieldSchema)` to create a new message.
 */
export const FieldSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 1);

/**
 * Describes the message streamvis.v1.Scope.
 * Use `create(ScopeSchema)` to create a new message.
 */
export const ScopeSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 2);

/**
 * Describes the message streamvis.v1.Name.
 * Use `create(NameSchema)` to create a new message.
 */
export const NameSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 3);

/**
 * Describes the message streamvis.v1.Control.
 * Use `create(ControlSchema)` to create a new message.
 */
export const ControlSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 4);

/**
 * Describes the message streamvis.v1.DataEntry.
 * Use `create(DataEntrySchema)` to create a new message.
 */
export const DataEntrySchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 5);

/**
 * Describes the message streamvis.v1.ConfigEntry.
 * Use `create(ConfigEntrySchema)` to create a new message.
 */
export const ConfigEntrySchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 6);

/**
 * Describes the message streamvis.v1.Data.
 * Use `create(DataSchema)` to create a new message.
 */
export const DataSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 7);

/**
 * Describes the message streamvis.v1.Config.
 * Use `create(ConfigSchema)` to create a new message.
 */
export const ConfigSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 8);

/**
 * Describes the message streamvis.v1.Stored.
 * Use `create(StoredSchema)` to create a new message.
 */
export const StoredSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 9);

/**
 * Describes the message streamvis.v1.DataRequest.
 * Use `create(DataRequestSchema)` to create a new message.
 */
export const DataRequestSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 10);

/**
 * Describes the message streamvis.v1.RecordResult.
 * Use `create(RecordResultSchema)` to create a new message.
 */
export const RecordResultSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 11);

/**
 * Describes the message streamvis.v1.ScopeRequest.
 * Use `create(ScopeRequestSchema)` to create a new message.
 */
export const ScopeRequestSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 12);

/**
 * Describes the message streamvis.v1.ScopeResult.
 * Use `create(ScopeResultSchema)` to create a new message.
 */
export const ScopeResultSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 13);

/**
 * Describes the message streamvis.v1.NamesRequest.
 * Use `create(NamesRequestSchema)` to create a new message.
 */
export const NamesRequestSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 14);

/**
 * Describes the message streamvis.v1.ConfigRequest.
 * Use `create(ConfigRequestSchema)` to create a new message.
 */
export const ConfigRequestSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 15);

/**
 * Describes the message streamvis.v1.ConfigResult.
 * Use `create(ConfigResultSchema)` to create a new message.
 */
export const ConfigResultSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 16);

/**
 * Describes the message streamvis.v1.Tag.
 * Use `create(TagSchema)` to create a new message.
 */
export const TagSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 17);

/**
 * Describes the message streamvis.v1.Streamed.
 * Use `create(StreamedSchema)` to create a new message.
 */
export const StreamedSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 18);

/**
 * Describes the message streamvis.v1.DataResult.
 * Use `create(DataResultSchema)` to create a new message.
 */
export const DataResultSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 19);

/**
 * Describes the message streamvis.v1.WriteConfigRequest.
 * Use `create(WriteConfigRequestSchema)` to create a new message.
 */
export const WriteConfigRequestSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 20);

/**
 * Describes the message streamvis.v1.WriteScopeRequest.
 * Use `create(WriteScopeRequestSchema)` to create a new message.
 */
export const WriteScopeRequestSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 21);

/**
 * Describes the message streamvis.v1.WriteNameRequest.
 * Use `create(WriteNameRequestSchema)` to create a new message.
 */
export const WriteNameRequestSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 22);

/**
 * Describes the message streamvis.v1.DeleteTagRequest.
 * Use `create(DeleteTagRequestSchema)` to create a new message.
 */
export const DeleteTagRequestSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 23);

/**
 * Describes the message streamvis.v1.DeleteTagResponse.
 * Use `create(DeleteTagResponseSchema)` to create a new message.
 */
export const DeleteTagResponseSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 24);

/**
 * Describes the message streamvis.v1.WriteDataRequest.
 * Use `create(WriteDataRequestSchema)` to create a new message.
 */
export const WriteDataRequestSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 25);

/**
 * Describes the message streamvis.v1.WriteDataResponse.
 * Use `create(WriteDataResponseSchema)` to create a new message.
 */
export const WriteDataResponseSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 26);

/**
 * Describes the message streamvis.v1.WriteScopeResponse.
 * Use `create(WriteScopeResponseSchema)` to create a new message.
 */
export const WriteScopeResponseSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 27);

/**
 * Describes the message streamvis.v1.WriteNameResponse.
 * Use `create(WriteNameResponseSchema)` to create a new message.
 */
export const WriteNameResponseSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 28);

/**
 * Describes the message streamvis.v1.WriteConfigResponse.
 * Use `create(WriteConfigResponseSchema)` to create a new message.
 */
export const WriteConfigResponseSchema = /*@__PURE__*/
  messageDesc(file_streamvis_v1_data, 29);

/**
 * Describes the enum streamvis.v1.DType.
 */
export const DTypeSchema = /*@__PURE__*/
  enumDesc(file_streamvis_v1_data, 0);

/**
 * @generated from enum streamvis.v1.DType
 */
export const DType = /*@__PURE__*/
  tsEnum(DTypeSchema);

/**
 * Describes the enum streamvis.v1.Action.
 */
export const ActionSchema = /*@__PURE__*/
  enumDesc(file_streamvis_v1_data, 1);

/**
 * @generated from enum streamvis.v1.Action
 */
export const Action = /*@__PURE__*/
  tsEnum(ActionSchema);

/**
 * @generated from service streamvis.v1.Service
 */
export const Service = /*@__PURE__*/
  serviceDesc(file_streamvis_v1_data, 0);

