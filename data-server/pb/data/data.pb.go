// compile from streamvis dir (repo directory)
// python -m grpc_tools.protoc -I . --python_out=. --grpc_python_out=. streamvis/data.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.30.2
// source: data.proto

package data

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldType int32

const (
	FieldType_FLOAT FieldType = 0
	FieldType_INT   FieldType = 1
)

// Enum value maps for FieldType.
var (
	FieldType_name = map[int32]string{
		0: "FLOAT",
		1: "INT",
	}
	FieldType_value = map[string]int32{
		"FLOAT": 0,
		"INT":   1,
	}
)

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[0].Descriptor()
}

func (FieldType) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[0]
}

func (x FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldType.Descriptor instead.
func (FieldType) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0}
}

type Action int32

const (
	Action_DELETE_SCOPE Action = 0
	Action_DELETE_NAME  Action = 1
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "DELETE_SCOPE",
		1: "DELETE_NAME",
	}
	Action_value = map[string]int32{
		"DELETE_SCOPE": 0,
		"DELETE_NAME":  1,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[1].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[1]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{1}
}

type StoredType int32

const (
	StoredType_SCOPE        StoredType = 0
	StoredType_NAME         StoredType = 1
	StoredType_DATA_ENTRY   StoredType = 2
	StoredType_CONFIG_ENTRY StoredType = 3
	StoredType_DATA         StoredType = 4
	StoredType_CONFIG       StoredType = 5
	StoredType_CONTROL      StoredType = 6
	StoredType_INDEX        StoredType = 7
	StoredType_STRING       StoredType = 8
)

// Enum value maps for StoredType.
var (
	StoredType_name = map[int32]string{
		0: "SCOPE",
		1: "NAME",
		2: "DATA_ENTRY",
		3: "CONFIG_ENTRY",
		4: "DATA",
		5: "CONFIG",
		6: "CONTROL",
		7: "INDEX",
		8: "STRING",
	}
	StoredType_value = map[string]int32{
		"SCOPE":        0,
		"NAME":         1,
		"DATA_ENTRY":   2,
		"CONFIG_ENTRY": 3,
		"DATA":         4,
		"CONFIG":       5,
		"CONTROL":      6,
		"INDEX":        7,
		"STRING":       8,
	}
)

func (x StoredType) Enum() *StoredType {
	p := new(StoredType)
	*p = x
	return p
}

func (x StoredType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoredType) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[2].Descriptor()
}

func (StoredType) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[2]
}

func (x StoredType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoredType.Descriptor instead.
func (StoredType) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{2}
}

type Field struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          FieldType              `protobuf:"varint,2,opt,name=type,proto3,enum=FieldType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Field) Reset() {
	*x = Field{}
	mi := &file_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetType() FieldType {
	if x != nil {
		return x.Type
	}
	return FieldType_FLOAT
}

// Adapted from
// tensorflow/core/example/example.proto
// tensorflow/core/example/example/feature.proto
type FloatList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []float32              `protobuf:"fixed32,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FloatList) Reset() {
	*x = FloatList{}
	mi := &file_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FloatList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatList) ProtoMessage() {}

func (x *FloatList) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatList.ProtoReflect.Descriptor instead.
func (*FloatList) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{1}
}

func (x *FloatList) GetValue() []float32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type IntList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []int32                `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntList) Reset() {
	*x = IntList{}
	mi := &file_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntList) ProtoMessage() {}

func (x *IntList) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntList.ProtoReflect.Descriptor instead.
func (*IntList) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{2}
}

func (x *IntList) GetValue() []int32 {
	if x != nil {
		return x.Value
	}
	return nil
}

// Containers for non-sequential data.
type Values struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Each feature can be exactly one kind.
	//
	// Types that are valid to be assigned to Data:
	//
	//	*Values_Floats
	//	*Values_Ints
	Data          isValues_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Values) Reset() {
	*x = Values{}
	mi := &file_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Values) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Values) ProtoMessage() {}

func (x *Values) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Values.ProtoReflect.Descriptor instead.
func (*Values) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{3}
}

func (x *Values) GetData() isValues_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Values) GetFloats() *FloatList {
	if x != nil {
		if x, ok := x.Data.(*Values_Floats); ok {
			return x.Floats
		}
	}
	return nil
}

func (x *Values) GetInts() *IntList {
	if x != nil {
		if x, ok := x.Data.(*Values_Ints); ok {
			return x.Ints
		}
	}
	return nil
}

type isValues_Data interface {
	isValues_Data()
}

type Values_Floats struct {
	Floats *FloatList `protobuf:"bytes,2,opt,name=floats,proto3,oneof"`
}

type Values_Ints struct {
	Ints *IntList `protobuf:"bytes,3,opt,name=ints,proto3,oneof"`
}

func (*Values_Floats) isValues_Data() {}

func (*Values_Ints) isValues_Data() {}

// Scope, Name, Control, DataEntry, ConfigEntry stored in .idx file
// This message will be logged once per program run
type Scope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScopeId       uint32                 `protobuf:"varint,1,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty"` // globally unique key equal to hash(scope, time) % UINT32_MAX
	Scope         string                 `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	Time          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Scope) Reset() {
	*x = Scope{}
	mi := &file_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Scope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scope) ProtoMessage() {}

func (x *Scope) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scope.ProtoReflect.Descriptor instead.
func (*Scope) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{4}
}

func (x *Scope) GetScopeId() uint32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *Scope) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Scope) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

// Corresponds to the 'name' field of a logger.write command
// globally unique key is (scope_id, name)
type Name struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NameId        uint32                 `protobuf:"varint,1,opt,name=name_id,json=nameId,proto3" json:"name_id,omitempty"` // equal to hash(scope_id, name) % UINT32_MAX
	ScopeId       uint32                 `protobuf:"varint,2,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Fields        []*Field               `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Name) Reset() {
	*x = Name{}
	mi := &file_data_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Name) ProtoMessage() {}

func (x *Name) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Name.ProtoReflect.Descriptor instead.
func (*Name) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{5}
}

func (x *Name) GetNameId() uint32 {
	if x != nil {
		return x.NameId
	}
	return 0
}

func (x *Name) GetScopeId() uint32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *Name) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Name) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Control struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Action        Action                 `protobuf:"varint,3,opt,name=action,proto3,enum=Action" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Control) Reset() {
	*x = Control{}
	mi := &file_data_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Control) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Control) ProtoMessage() {}

func (x *Control) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Control.ProtoReflect.Descriptor instead.
func (*Control) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{6}
}

func (x *Control) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Control) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Control) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_DELETE_SCOPE
}

// Describes one Data entry in data file
type DataEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntryId       uint32                 `protobuf:"varint,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`       // globally unqiue
	NameId        uint32                 `protobuf:"varint,2,opt,name=name_id,json=nameId,proto3" json:"name_id,omitempty"`          // foreign key to Name message
	BegOffset     uint64                 `protobuf:"varint,3,opt,name=beg_offset,json=begOffset,proto3" json:"beg_offset,omitempty"` // file offset of begin of Data message
	EndOffset     uint64                 `protobuf:"varint,4,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"` // file offset of end of Data message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataEntry) Reset() {
	*x = DataEntry{}
	mi := &file_data_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataEntry) ProtoMessage() {}

func (x *DataEntry) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataEntry.ProtoReflect.Descriptor instead.
func (*DataEntry) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{7}
}

func (x *DataEntry) GetEntryId() uint32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *DataEntry) GetNameId() uint32 {
	if x != nil {
		return x.NameId
	}
	return 0
}

func (x *DataEntry) GetBegOffset() uint64 {
	if x != nil {
		return x.BegOffset
	}
	return 0
}

func (x *DataEntry) GetEndOffset() uint64 {
	if x != nil {
		return x.EndOffset
	}
	return 0
}

// Describes one Config entry in data file
type ConfigEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntryId       uint32                 `protobuf:"varint,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"` // globally unique
	ScopeId       uint32                 `protobuf:"varint,2,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty"`
	BegOffset     uint64                 `protobuf:"varint,3,opt,name=beg_offset,json=begOffset,proto3" json:"beg_offset,omitempty"`
	EndOffset     uint64                 `protobuf:"varint,4,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigEntry) Reset() {
	*x = ConfigEntry{}
	mi := &file_data_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigEntry) ProtoMessage() {}

func (x *ConfigEntry) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigEntry.ProtoReflect.Descriptor instead.
func (*ConfigEntry) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigEntry) GetEntryId() uint32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *ConfigEntry) GetScopeId() uint32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *ConfigEntry) GetBegOffset() uint64 {
	if x != nil {
		return x.BegOffset
	}
	return 0
}

func (x *ConfigEntry) GetEndOffset() uint64 {
	if x != nil {
		return x.EndOffset
	}
	return 0
}

type Data struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// globally unique key is (entry_id, index)
	EntryId       uint32    `protobuf:"varint,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"` // foreign key to Entry message
	Index         uint32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`                    //
	Axes          []*Values `protobuf:"bytes,3,rep,name=axes,proto3" json:"axes,omitempty"`                       // actual data
	NameId        uint32    `protobuf:"varint,4,opt,name=name_id,json=nameId,proto3" json:"name_id,omitempty"`    // not stored on disk - used in join logic for RPC
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_data_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{9}
}

func (x *Data) GetEntryId() uint32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *Data) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Data) GetAxes() []*Values {
	if x != nil {
		return x.Axes
	}
	return nil
}

func (x *Data) GetNameId() uint32 {
	if x != nil {
		return x.NameId
	}
	return 0
}

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntryId       uint32                 `protobuf:"varint,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	Attributes    *structpb.Struct       `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	ScopeId       uint32                 `protobuf:"varint,3,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty"` // not stored on disk
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_data_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{10}
}

func (x *Config) GetEntryId() uint32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *Config) GetAttributes() *structpb.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Config) GetScopeId() uint32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

type Index struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScopeFilter   string                 `protobuf:"bytes,1,opt,name=scope_filter,json=scopeFilter,proto3" json:"scope_filter,omitempty"`
	NameFilters   []string               `protobuf:"bytes,2,rep,name=name_filters,json=nameFilters,proto3" json:"name_filters,omitempty"`
	Scopes        map[uint32]*Scope      `protobuf:"bytes,3,rep,name=scopes,proto3" json:"scopes,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Names         map[uint32]*Name       `protobuf:"bytes,4,rep,name=names,proto3" json:"names,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FileOffset    uint64                 `protobuf:"varint,5,opt,name=file_offset,json=fileOffset,proto3" json:"file_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Index) Reset() {
	*x = Index{}
	mi := &file_data_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Index.ProtoReflect.Descriptor instead.
func (*Index) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{11}
}

func (x *Index) GetScopeFilter() string {
	if x != nil {
		return x.ScopeFilter
	}
	return ""
}

func (x *Index) GetNameFilters() []string {
	if x != nil {
		return x.NameFilters
	}
	return nil
}

func (x *Index) GetScopes() map[uint32]*Scope {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *Index) GetNames() map[uint32]*Name {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *Index) GetFileOffset() uint64 {
	if x != nil {
		return x.FileOffset
	}
	return 0
}

type ScopeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScopeRequest) Reset() {
	*x = ScopeRequest{}
	mi := &file_data_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeRequest) ProtoMessage() {}

func (x *ScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeRequest.ProtoReflect.Descriptor instead.
func (*ScopeRequest) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{12}
}

func (x *ScopeRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type StreamedRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  StoredType             `protobuf:"varint,1,opt,name=type,proto3,enum=StoredType" json:"type,omitempty"`
	// Types that are valid to be assigned to Record:
	//
	//	*StreamedRecord_Index
	//	*StreamedRecord_Data
	//	*StreamedRecord_Name
	//	*StreamedRecord_Config
	//	*StreamedRecord_Value
	Record        isStreamedRecord_Record `protobuf_oneof:"record"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamedRecord) Reset() {
	*x = StreamedRecord{}
	mi := &file_data_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamedRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamedRecord) ProtoMessage() {}

func (x *StreamedRecord) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamedRecord.ProtoReflect.Descriptor instead.
func (*StreamedRecord) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{13}
}

func (x *StreamedRecord) GetType() StoredType {
	if x != nil {
		return x.Type
	}
	return StoredType_SCOPE
}

func (x *StreamedRecord) GetRecord() isStreamedRecord_Record {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *StreamedRecord) GetIndex() *Index {
	if x != nil {
		if x, ok := x.Record.(*StreamedRecord_Index); ok {
			return x.Index
		}
	}
	return nil
}

func (x *StreamedRecord) GetData() *Data {
	if x != nil {
		if x, ok := x.Record.(*StreamedRecord_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *StreamedRecord) GetName() *Name {
	if x != nil {
		if x, ok := x.Record.(*StreamedRecord_Name); ok {
			return x.Name
		}
	}
	return nil
}

func (x *StreamedRecord) GetConfig() *Config {
	if x != nil {
		if x, ok := x.Record.(*StreamedRecord_Config); ok {
			return x.Config
		}
	}
	return nil
}

func (x *StreamedRecord) GetValue() string {
	if x != nil {
		if x, ok := x.Record.(*StreamedRecord_Value); ok {
			return x.Value
		}
	}
	return ""
}

type isStreamedRecord_Record interface {
	isStreamedRecord_Record()
}

type StreamedRecord_Index struct {
	Index *Index `protobuf:"bytes,2,opt,name=index,proto3,oneof"`
}

type StreamedRecord_Data struct {
	Data *Data `protobuf:"bytes,3,opt,name=data,proto3,oneof"`
}

type StreamedRecord_Name struct {
	Name *Name `protobuf:"bytes,4,opt,name=name,proto3,oneof"`
}

type StreamedRecord_Config struct {
	Config *Config `protobuf:"bytes,5,opt,name=config,proto3,oneof"`
}

type StreamedRecord_Value struct {
	Value string `protobuf:"bytes,6,opt,name=value,proto3,oneof"`
}

func (*StreamedRecord_Index) isStreamedRecord_Record() {}

func (*StreamedRecord_Data) isStreamedRecord_Record() {}

func (*StreamedRecord_Name) isStreamedRecord_Record() {}

func (*StreamedRecord_Config) isStreamedRecord_Record() {}

func (*StreamedRecord_Value) isStreamedRecord_Record() {}

type WriteConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScopeId       uint32                 `protobuf:"varint,1,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty"`
	Attributes    *structpb.Struct       `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteConfigRequest) Reset() {
	*x = WriteConfigRequest{}
	mi := &file_data_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteConfigRequest) ProtoMessage() {}

func (x *WriteConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteConfigRequest.ProtoReflect.Descriptor instead.
func (*WriteConfigRequest) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{14}
}

func (x *WriteConfigRequest) GetScopeId() uint32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *WriteConfigRequest) GetAttributes() *structpb.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type WriteScopeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteScopeRequest) Reset() {
	*x = WriteScopeRequest{}
	mi := &file_data_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteScopeRequest) ProtoMessage() {}

func (x *WriteScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteScopeRequest.ProtoReflect.Descriptor instead.
func (*WriteScopeRequest) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{15}
}

func (x *WriteScopeRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type IntegerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         uint32                 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntegerResponse) Reset() {
	*x = IntegerResponse{}
	mi := &file_data_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntegerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegerResponse) ProtoMessage() {}

func (x *IntegerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegerResponse.ProtoReflect.Descriptor instead.
func (*IntegerResponse) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{16}
}

func (x *IntegerResponse) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type WriteNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []*Name                `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteNameRequest) Reset() {
	*x = WriteNameRequest{}
	mi := &file_data_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteNameRequest) ProtoMessage() {}

func (x *WriteNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteNameRequest.ProtoReflect.Descriptor instead.
func (*WriteNameRequest) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{17}
}

func (x *WriteNameRequest) GetNames() []*Name {
	if x != nil {
		return x.Names
	}
	return nil
}

type ScopeNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Names         []string               `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScopeNameRequest) Reset() {
	*x = ScopeNameRequest{}
	mi := &file_data_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScopeNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeNameRequest) ProtoMessage() {}

func (x *ScopeNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeNameRequest.ProtoReflect.Descriptor instead.
func (*ScopeNameRequest) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{18}
}

func (x *ScopeNameRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *ScopeNameRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type WriteDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Datas         []*Data                `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteDataRequest) Reset() {
	*x = WriteDataRequest{}
	mi := &file_data_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteDataRequest) ProtoMessage() {}

func (x *WriteDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteDataRequest.ProtoReflect.Descriptor instead.
func (*WriteDataRequest) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{19}
}

func (x *WriteDataRequest) GetDatas() []*Data {
	if x != nil {
		return x.Datas
	}
	return nil
}

var File_data_proto protoreflect.FileDescriptor

const file_data_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"data.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\";\n" +
	"\x05Field\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1e\n" +
	"\x04type\x18\x02 \x01(\x0e2\n" +
	".FieldTypeR\x04type\"%\n" +
	"\tFloatList\x12\x18\n" +
	"\x05value\x18\x01 \x03(\x02B\x02\x10\x01R\x05value\"#\n" +
	"\aIntList\x12\x18\n" +
	"\x05value\x18\x01 \x03(\x05B\x02\x10\x01R\x05value\"V\n" +
	"\x06Values\x12$\n" +
	"\x06floats\x18\x02 \x01(\v2\n" +
	".FloatListH\x00R\x06floats\x12\x1e\n" +
	"\x04ints\x18\x03 \x01(\v2\b.IntListH\x00R\x04intsB\x06\n" +
	"\x04data\"h\n" +
	"\x05Scope\x12\x19\n" +
	"\bscope_id\x18\x01 \x01(\rR\ascopeId\x12\x14\n" +
	"\x05scope\x18\x02 \x01(\tR\x05scope\x12.\n" +
	"\x04time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\"n\n" +
	"\x04Name\x12\x17\n" +
	"\aname_id\x18\x01 \x01(\rR\x06nameId\x12\x19\n" +
	"\bscope_id\x18\x02 \x01(\rR\ascopeId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1e\n" +
	"\x06fields\x18\x04 \x03(\v2\x06.FieldR\x06fields\"T\n" +
	"\aControl\x12\x14\n" +
	"\x05scope\x18\x01 \x01(\tR\x05scope\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1f\n" +
	"\x06action\x18\x03 \x01(\x0e2\a.ActionR\x06action\"}\n" +
	"\tDataEntry\x12\x19\n" +
	"\bentry_id\x18\x01 \x01(\rR\aentryId\x12\x17\n" +
	"\aname_id\x18\x02 \x01(\rR\x06nameId\x12\x1d\n" +
	"\n" +
	"beg_offset\x18\x03 \x01(\x04R\tbegOffset\x12\x1d\n" +
	"\n" +
	"end_offset\x18\x04 \x01(\x04R\tendOffset\"\x81\x01\n" +
	"\vConfigEntry\x12\x19\n" +
	"\bentry_id\x18\x01 \x01(\rR\aentryId\x12\x19\n" +
	"\bscope_id\x18\x02 \x01(\rR\ascopeId\x12\x1d\n" +
	"\n" +
	"beg_offset\x18\x03 \x01(\x04R\tbegOffset\x12\x1d\n" +
	"\n" +
	"end_offset\x18\x04 \x01(\x04R\tendOffset\"m\n" +
	"\x04Data\x12\x19\n" +
	"\bentry_id\x18\x01 \x01(\rR\aentryId\x12\x14\n" +
	"\x05index\x18\x02 \x01(\rR\x05index\x12\x1b\n" +
	"\x04axes\x18\x03 \x03(\v2\a.ValuesR\x04axes\x12\x17\n" +
	"\aname_id\x18\x04 \x01(\rR\x06nameId\"w\n" +
	"\x06Config\x12\x19\n" +
	"\bentry_id\x18\x01 \x01(\rR\aentryId\x127\n" +
	"\n" +
	"attributes\x18\x02 \x01(\v2\x17.google.protobuf.StructR\n" +
	"attributes\x12\x19\n" +
	"\bscope_id\x18\x03 \x01(\rR\ascopeId\"\xc7\x02\n" +
	"\x05Index\x12!\n" +
	"\fscope_filter\x18\x01 \x01(\tR\vscopeFilter\x12!\n" +
	"\fname_filters\x18\x02 \x03(\tR\vnameFilters\x12*\n" +
	"\x06scopes\x18\x03 \x03(\v2\x12.Index.ScopesEntryR\x06scopes\x12'\n" +
	"\x05names\x18\x04 \x03(\v2\x11.Index.NamesEntryR\x05names\x12\x1f\n" +
	"\vfile_offset\x18\x05 \x01(\x04R\n" +
	"fileOffset\x1aA\n" +
	"\vScopesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x1c\n" +
	"\x05value\x18\x02 \x01(\v2\x06.ScopeR\x05value:\x028\x01\x1a?\n" +
	"\n" +
	"NamesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x1b\n" +
	"\x05value\x18\x02 \x01(\v2\x05.NameR\x05value:\x028\x01\"$\n" +
	"\fScopeRequest\x12\x14\n" +
	"\x05scope\x18\x01 \x01(\tR\x05scope\"\xd0\x01\n" +
	"\x0eStreamedRecord\x12\x1f\n" +
	"\x04type\x18\x01 \x01(\x0e2\v.StoredTypeR\x04type\x12\x1e\n" +
	"\x05index\x18\x02 \x01(\v2\x06.IndexH\x00R\x05index\x12\x1b\n" +
	"\x04data\x18\x03 \x01(\v2\x05.DataH\x00R\x04data\x12\x1b\n" +
	"\x04name\x18\x04 \x01(\v2\x05.NameH\x00R\x04name\x12!\n" +
	"\x06config\x18\x05 \x01(\v2\a.ConfigH\x00R\x06config\x12\x16\n" +
	"\x05value\x18\x06 \x01(\tH\x00R\x05valueB\b\n" +
	"\x06record\"h\n" +
	"\x12WriteConfigRequest\x12\x19\n" +
	"\bscope_id\x18\x01 \x01(\rR\ascopeId\x127\n" +
	"\n" +
	"attributes\x18\x02 \x01(\v2\x17.google.protobuf.StructR\n" +
	"attributes\")\n" +
	"\x11WriteScopeRequest\x12\x14\n" +
	"\x05scope\x18\x01 \x01(\tR\x05scope\"'\n" +
	"\x0fIntegerResponse\x12\x14\n" +
	"\x05value\x18\x01 \x01(\rR\x05value\"/\n" +
	"\x10WriteNameRequest\x12\x1b\n" +
	"\x05names\x18\x01 \x03(\v2\x05.NameR\x05names\">\n" +
	"\x10ScopeNameRequest\x12\x14\n" +
	"\x05scope\x18\x01 \x01(\tR\x05scope\x12\x14\n" +
	"\x05names\x18\x02 \x03(\tR\x05names\"/\n" +
	"\x10WriteDataRequest\x12\x1b\n" +
	"\x05datas\x18\x01 \x03(\v2\x05.DataR\x05datas*\x1f\n" +
	"\tFieldType\x12\t\n" +
	"\x05FLOAT\x10\x00\x12\a\n" +
	"\x03INT\x10\x01*+\n" +
	"\x06Action\x12\x10\n" +
	"\fDELETE_SCOPE\x10\x00\x12\x0f\n" +
	"\vDELETE_NAME\x10\x01*}\n" +
	"\n" +
	"StoredType\x12\t\n" +
	"\x05SCOPE\x10\x00\x12\b\n" +
	"\x04NAME\x10\x01\x12\x0e\n" +
	"\n" +
	"DATA_ENTRY\x10\x02\x12\x10\n" +
	"\fCONFIG_ENTRY\x10\x03\x12\b\n" +
	"\x04DATA\x10\x04\x12\n" +
	"\n" +
	"\x06CONFIG\x10\x05\x12\v\n" +
	"\aCONTROL\x10\x06\x12\t\n" +
	"\x05INDEX\x10\a\x12\n" +
	"\n" +
	"\x06STRING\x10\b2\xe2\x03\n" +
	"\rRecordService\x12)\n" +
	"\fQueryRecords\x12\x06.Index\x1a\x0f.StreamedRecord0\x01\x123\n" +
	"\x06Scopes\x12\x16.google.protobuf.Empty\x1a\x0f.StreamedRecord0\x01\x12)\n" +
	"\x05Names\x12\r.ScopeRequest\x1a\x0f.StreamedRecord0\x01\x12+\n" +
	"\aConfigs\x12\r.ScopeRequest\x1a\x0f.StreamedRecord0\x01\x122\n" +
	"\n" +
	"WriteScope\x12\x12.WriteScopeRequest\x1a\x10.IntegerResponse\x12:\n" +
	"\vWriteConfig\x12\x13.WriteConfigRequest\x1a\x16.google.protobuf.Empty\x122\n" +
	"\n" +
	"WriteNames\x12\x11.WriteNameRequest\x1a\x0f.StreamedRecord0\x01\x12=\n" +
	"\x10DeleteScopeNames\x12\x11.ScopeNameRequest\x1a\x16.google.protobuf.Empty\x126\n" +
	"\tWriteData\x12\x11.WriteDataRequest\x1a\x16.google.protobuf.EmptyB\bZ\x06./datab\x06proto3"

var (
	file_data_proto_rawDescOnce sync.Once
	file_data_proto_rawDescData []byte
)

func file_data_proto_rawDescGZIP() []byte {
	file_data_proto_rawDescOnce.Do(func() {
		file_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_data_proto_rawDesc), len(file_data_proto_rawDesc)))
	})
	return file_data_proto_rawDescData
}

var file_data_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_data_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_data_proto_goTypes = []any{
	(FieldType)(0),                // 0: FieldType
	(Action)(0),                   // 1: Action
	(StoredType)(0),               // 2: StoredType
	(*Field)(nil),                 // 3: Field
	(*FloatList)(nil),             // 4: FloatList
	(*IntList)(nil),               // 5: IntList
	(*Values)(nil),                // 6: Values
	(*Scope)(nil),                 // 7: Scope
	(*Name)(nil),                  // 8: Name
	(*Control)(nil),               // 9: Control
	(*DataEntry)(nil),             // 10: DataEntry
	(*ConfigEntry)(nil),           // 11: ConfigEntry
	(*Data)(nil),                  // 12: Data
	(*Config)(nil),                // 13: Config
	(*Index)(nil),                 // 14: Index
	(*ScopeRequest)(nil),          // 15: ScopeRequest
	(*StreamedRecord)(nil),        // 16: StreamedRecord
	(*WriteConfigRequest)(nil),    // 17: WriteConfigRequest
	(*WriteScopeRequest)(nil),     // 18: WriteScopeRequest
	(*IntegerResponse)(nil),       // 19: IntegerResponse
	(*WriteNameRequest)(nil),      // 20: WriteNameRequest
	(*ScopeNameRequest)(nil),      // 21: ScopeNameRequest
	(*WriteDataRequest)(nil),      // 22: WriteDataRequest
	nil,                           // 23: Index.ScopesEntry
	nil,                           // 24: Index.NamesEntry
	(*timestamppb.Timestamp)(nil), // 25: google.protobuf.Timestamp
	(*structpb.Struct)(nil),       // 26: google.protobuf.Struct
	(*emptypb.Empty)(nil),         // 27: google.protobuf.Empty
}
var file_data_proto_depIdxs = []int32{
	0,  // 0: Field.type:type_name -> FieldType
	4,  // 1: Values.floats:type_name -> FloatList
	5,  // 2: Values.ints:type_name -> IntList
	25, // 3: Scope.time:type_name -> google.protobuf.Timestamp
	3,  // 4: Name.fields:type_name -> Field
	1,  // 5: Control.action:type_name -> Action
	6,  // 6: Data.axes:type_name -> Values
	26, // 7: Config.attributes:type_name -> google.protobuf.Struct
	23, // 8: Index.scopes:type_name -> Index.ScopesEntry
	24, // 9: Index.names:type_name -> Index.NamesEntry
	2,  // 10: StreamedRecord.type:type_name -> StoredType
	14, // 11: StreamedRecord.index:type_name -> Index
	12, // 12: StreamedRecord.data:type_name -> Data
	8,  // 13: StreamedRecord.name:type_name -> Name
	13, // 14: StreamedRecord.config:type_name -> Config
	26, // 15: WriteConfigRequest.attributes:type_name -> google.protobuf.Struct
	8,  // 16: WriteNameRequest.names:type_name -> Name
	12, // 17: WriteDataRequest.datas:type_name -> Data
	7,  // 18: Index.ScopesEntry.value:type_name -> Scope
	8,  // 19: Index.NamesEntry.value:type_name -> Name
	14, // 20: RecordService.QueryRecords:input_type -> Index
	27, // 21: RecordService.Scopes:input_type -> google.protobuf.Empty
	15, // 22: RecordService.Names:input_type -> ScopeRequest
	15, // 23: RecordService.Configs:input_type -> ScopeRequest
	18, // 24: RecordService.WriteScope:input_type -> WriteScopeRequest
	17, // 25: RecordService.WriteConfig:input_type -> WriteConfigRequest
	20, // 26: RecordService.WriteNames:input_type -> WriteNameRequest
	21, // 27: RecordService.DeleteScopeNames:input_type -> ScopeNameRequest
	22, // 28: RecordService.WriteData:input_type -> WriteDataRequest
	16, // 29: RecordService.QueryRecords:output_type -> StreamedRecord
	16, // 30: RecordService.Scopes:output_type -> StreamedRecord
	16, // 31: RecordService.Names:output_type -> StreamedRecord
	16, // 32: RecordService.Configs:output_type -> StreamedRecord
	19, // 33: RecordService.WriteScope:output_type -> IntegerResponse
	27, // 34: RecordService.WriteConfig:output_type -> google.protobuf.Empty
	16, // 35: RecordService.WriteNames:output_type -> StreamedRecord
	27, // 36: RecordService.DeleteScopeNames:output_type -> google.protobuf.Empty
	27, // 37: RecordService.WriteData:output_type -> google.protobuf.Empty
	29, // [29:38] is the sub-list for method output_type
	20, // [20:29] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_data_proto_init() }
func file_data_proto_init() {
	if File_data_proto != nil {
		return
	}
	file_data_proto_msgTypes[3].OneofWrappers = []any{
		(*Values_Floats)(nil),
		(*Values_Ints)(nil),
	}
	file_data_proto_msgTypes[13].OneofWrappers = []any{
		(*StreamedRecord_Index)(nil),
		(*StreamedRecord_Data)(nil),
		(*StreamedRecord_Name)(nil),
		(*StreamedRecord_Config)(nil),
		(*StreamedRecord_Value)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_data_proto_rawDesc), len(file_data_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_data_proto_goTypes,
		DependencyIndexes: file_data_proto_depIdxs,
		EnumInfos:         file_data_proto_enumTypes,
		MessageInfos:      file_data_proto_msgTypes,
	}.Build()
	File_data_proto = out.File
	file_data_proto_goTypes = nil
	file_data_proto_depIdxs = nil
}
