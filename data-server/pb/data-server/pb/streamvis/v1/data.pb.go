// compile from streamvis dir (repo directory)
// python -m grpc_tools.protoc -I . --python_out=. --grpc_python_out=. streamvis/data.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.30.2
// source: streamvis/v1/data.proto

package streamvis_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldType int32

const (
	FieldType_FIELD_TYPE_UNSPECIFIED FieldType = 0
	FieldType_FIELD_TYPE_FLOAT       FieldType = 1
	FieldType_FIELD_TYPE_INT         FieldType = 2
)

// Enum value maps for FieldType.
var (
	FieldType_name = map[int32]string{
		0: "FIELD_TYPE_UNSPECIFIED",
		1: "FIELD_TYPE_FLOAT",
		2: "FIELD_TYPE_INT",
	}
	FieldType_value = map[string]int32{
		"FIELD_TYPE_UNSPECIFIED": 0,
		"FIELD_TYPE_FLOAT":       1,
		"FIELD_TYPE_INT":         2,
	}
)

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_streamvis_v1_data_proto_enumTypes[0].Descriptor()
}

func (FieldType) Type() protoreflect.EnumType {
	return &file_streamvis_v1_data_proto_enumTypes[0]
}

func (x FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldType.Descriptor instead.
func (FieldType) EnumDescriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{0}
}

type Action int32

const (
	Action_ACTION_UNSPECIFIED  Action = 0
	Action_ACTION_DELETE_SCOPE Action = 1
	Action_ACTION_DELETE_NAME  Action = 2
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "ACTION_DELETE_SCOPE",
		2: "ACTION_DELETE_NAME",
	}
	Action_value = map[string]int32{
		"ACTION_UNSPECIFIED":  0,
		"ACTION_DELETE_SCOPE": 1,
		"ACTION_DELETE_NAME":  2,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_streamvis_v1_data_proto_enumTypes[1].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_streamvis_v1_data_proto_enumTypes[1]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{1}
}

type Field struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          FieldType              `protobuf:"varint,2,opt,name=type,proto3,enum=streamvis.v1.FieldType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Field) Reset() {
	*x = Field{}
	mi := &file_streamvis_v1_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{0}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetType() FieldType {
	if x != nil {
		return x.Type
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

// Adapted from
// tensorflow/core/example/example.proto
// tensorflow/core/example/example/feature.proto
type FloatList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []float32              `protobuf:"fixed32,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FloatList) Reset() {
	*x = FloatList{}
	mi := &file_streamvis_v1_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FloatList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatList) ProtoMessage() {}

func (x *FloatList) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatList.ProtoReflect.Descriptor instead.
func (*FloatList) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{1}
}

func (x *FloatList) GetValue() []float32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type IntList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []int32                `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntList) Reset() {
	*x = IntList{}
	mi := &file_streamvis_v1_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntList) ProtoMessage() {}

func (x *IntList) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntList.ProtoReflect.Descriptor instead.
func (*IntList) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{2}
}

func (x *IntList) GetValue() []int32 {
	if x != nil {
		return x.Value
	}
	return nil
}

// Containers for non-sequential data.
type Values struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Each feature can be exactly one kind.
	//
	// Types that are valid to be assigned to Data:
	//
	//	*Values_Floats
	//	*Values_Ints
	Data          isValues_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Values) Reset() {
	*x = Values{}
	mi := &file_streamvis_v1_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Values) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Values) ProtoMessage() {}

func (x *Values) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Values.ProtoReflect.Descriptor instead.
func (*Values) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{3}
}

func (x *Values) GetData() isValues_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Values) GetFloats() *FloatList {
	if x != nil {
		if x, ok := x.Data.(*Values_Floats); ok {
			return x.Floats
		}
	}
	return nil
}

func (x *Values) GetInts() *IntList {
	if x != nil {
		if x, ok := x.Data.(*Values_Ints); ok {
			return x.Ints
		}
	}
	return nil
}

type isValues_Data interface {
	isValues_Data()
}

type Values_Floats struct {
	Floats *FloatList `protobuf:"bytes,2,opt,name=floats,proto3,oneof"`
}

type Values_Ints struct {
	Ints *IntList `protobuf:"bytes,3,opt,name=ints,proto3,oneof"`
}

func (*Values_Floats) isValues_Data() {}

func (*Values_Ints) isValues_Data() {}

// Scope, Name, Control, DataEntry, ConfigEntry stored in .idx file
// This message will be logged once per program run
type Scope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScopeId       uint32                 `protobuf:"varint,1,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty"` // globally unique key equal to hash(scope, time) % UINT32_MAX
	Scope         string                 `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	Time          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Scope) Reset() {
	*x = Scope{}
	mi := &file_streamvis_v1_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Scope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scope) ProtoMessage() {}

func (x *Scope) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scope.ProtoReflect.Descriptor instead.
func (*Scope) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{4}
}

func (x *Scope) GetScopeId() uint32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *Scope) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Scope) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

// Corresponds to the 'name' field of a logger.write command
// globally unique key is (scope_id, name)
type Name struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NameId        uint32                 `protobuf:"varint,1,opt,name=name_id,json=nameId,proto3" json:"name_id,omitempty"` // equal to hash(scope_id, name) % UINT32_MAX
	ScopeId       uint32                 `protobuf:"varint,2,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Fields        []*Field               `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Name) Reset() {
	*x = Name{}
	mi := &file_streamvis_v1_data_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Name) ProtoMessage() {}

func (x *Name) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Name.ProtoReflect.Descriptor instead.
func (*Name) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{5}
}

func (x *Name) GetNameId() uint32 {
	if x != nil {
		return x.NameId
	}
	return 0
}

func (x *Name) GetScopeId() uint32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *Name) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Name) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Control struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Action        Action                 `protobuf:"varint,3,opt,name=action,proto3,enum=streamvis.v1.Action" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Control) Reset() {
	*x = Control{}
	mi := &file_streamvis_v1_data_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Control) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Control) ProtoMessage() {}

func (x *Control) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Control.ProtoReflect.Descriptor instead.
func (*Control) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{6}
}

func (x *Control) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Control) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Control) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_ACTION_UNSPECIFIED
}

// Describes one Data entry in data file
type DataEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntryId       uint32                 `protobuf:"varint,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`       // globally unqiue
	NameId        uint32                 `protobuf:"varint,2,opt,name=name_id,json=nameId,proto3" json:"name_id,omitempty"`          // foreign key to Name message
	BegOffset     uint64                 `protobuf:"varint,3,opt,name=beg_offset,json=begOffset,proto3" json:"beg_offset,omitempty"` // file offset of begin of Data message
	EndOffset     uint64                 `protobuf:"varint,4,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"` // file offset of end of Data message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataEntry) Reset() {
	*x = DataEntry{}
	mi := &file_streamvis_v1_data_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataEntry) ProtoMessage() {}

func (x *DataEntry) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataEntry.ProtoReflect.Descriptor instead.
func (*DataEntry) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{7}
}

func (x *DataEntry) GetEntryId() uint32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *DataEntry) GetNameId() uint32 {
	if x != nil {
		return x.NameId
	}
	return 0
}

func (x *DataEntry) GetBegOffset() uint64 {
	if x != nil {
		return x.BegOffset
	}
	return 0
}

func (x *DataEntry) GetEndOffset() uint64 {
	if x != nil {
		return x.EndOffset
	}
	return 0
}

// Describes one Config entry in data file
type ConfigEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntryId       uint32                 `protobuf:"varint,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"` // globally unique
	ScopeId       uint32                 `protobuf:"varint,2,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty"`
	BegOffset     uint64                 `protobuf:"varint,3,opt,name=beg_offset,json=begOffset,proto3" json:"beg_offset,omitempty"`
	EndOffset     uint64                 `protobuf:"varint,4,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigEntry) Reset() {
	*x = ConfigEntry{}
	mi := &file_streamvis_v1_data_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigEntry) ProtoMessage() {}

func (x *ConfigEntry) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigEntry.ProtoReflect.Descriptor instead.
func (*ConfigEntry) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigEntry) GetEntryId() uint32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *ConfigEntry) GetScopeId() uint32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *ConfigEntry) GetBegOffset() uint64 {
	if x != nil {
		return x.BegOffset
	}
	return 0
}

func (x *ConfigEntry) GetEndOffset() uint64 {
	if x != nil {
		return x.EndOffset
	}
	return 0
}

type Data struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// globally unique key is (entry_id, index)
	EntryId       uint32    `protobuf:"varint,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"` // foreign key to Entry message
	Index         uint32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`                    //
	Axes          []*Values `protobuf:"bytes,3,rep,name=axes,proto3" json:"axes,omitempty"`                       // actual data
	NameId        uint32    `protobuf:"varint,4,opt,name=name_id,json=nameId,proto3" json:"name_id,omitempty"`    // not stored on disk - used in join logic for RPC
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_streamvis_v1_data_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{9}
}

func (x *Data) GetEntryId() uint32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *Data) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Data) GetAxes() []*Values {
	if x != nil {
		return x.Axes
	}
	return nil
}

func (x *Data) GetNameId() uint32 {
	if x != nil {
		return x.NameId
	}
	return 0
}

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntryId       uint32                 `protobuf:"varint,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	Attributes    *structpb.Struct       `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	ScopeId       uint32                 `protobuf:"varint,3,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty"` // not stored on disk
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_streamvis_v1_data_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{10}
}

func (x *Config) GetEntryId() uint32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *Config) GetAttributes() *structpb.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Config) GetScopeId() uint32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

type Stored struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*Stored_Scope
	//	*Stored_Name
	//	*Stored_Control
	//	*Stored_DataEntry
	//	*Stored_ConfigEntry
	//	*Stored_Data
	//	*Stored_Config
	Value         isStored_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stored) Reset() {
	*x = Stored{}
	mi := &file_streamvis_v1_data_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stored) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stored) ProtoMessage() {}

func (x *Stored) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stored.ProtoReflect.Descriptor instead.
func (*Stored) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{11}
}

func (x *Stored) GetValue() isStored_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Stored) GetScope() *Scope {
	if x != nil {
		if x, ok := x.Value.(*Stored_Scope); ok {
			return x.Scope
		}
	}
	return nil
}

func (x *Stored) GetName() *Name {
	if x != nil {
		if x, ok := x.Value.(*Stored_Name); ok {
			return x.Name
		}
	}
	return nil
}

func (x *Stored) GetControl() *Control {
	if x != nil {
		if x, ok := x.Value.(*Stored_Control); ok {
			return x.Control
		}
	}
	return nil
}

func (x *Stored) GetDataEntry() *DataEntry {
	if x != nil {
		if x, ok := x.Value.(*Stored_DataEntry); ok {
			return x.DataEntry
		}
	}
	return nil
}

func (x *Stored) GetConfigEntry() *ConfigEntry {
	if x != nil {
		if x, ok := x.Value.(*Stored_ConfigEntry); ok {
			return x.ConfigEntry
		}
	}
	return nil
}

func (x *Stored) GetData() *Data {
	if x != nil {
		if x, ok := x.Value.(*Stored_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *Stored) GetConfig() *Config {
	if x != nil {
		if x, ok := x.Value.(*Stored_Config); ok {
			return x.Config
		}
	}
	return nil
}

type isStored_Value interface {
	isStored_Value()
}

type Stored_Scope struct {
	Scope *Scope `protobuf:"bytes,1,opt,name=scope,proto3,oneof"`
}

type Stored_Name struct {
	Name *Name `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

type Stored_Control struct {
	Control *Control `protobuf:"bytes,3,opt,name=control,proto3,oneof"`
}

type Stored_DataEntry struct {
	DataEntry *DataEntry `protobuf:"bytes,4,opt,name=data_entry,json=dataEntry,proto3,oneof"`
}

type Stored_ConfigEntry struct {
	ConfigEntry *ConfigEntry `protobuf:"bytes,5,opt,name=config_entry,json=configEntry,proto3,oneof"`
}

type Stored_Data struct {
	Data *Data `protobuf:"bytes,6,opt,name=data,proto3,oneof"`
}

type Stored_Config struct {
	Config *Config `protobuf:"bytes,7,opt,name=config,proto3,oneof"`
}

func (*Stored_Scope) isStored_Value() {}

func (*Stored_Name) isStored_Value() {}

func (*Stored_Control) isStored_Value() {}

func (*Stored_DataEntry) isStored_Value() {}

func (*Stored_ConfigEntry) isStored_Value() {}

func (*Stored_Data) isStored_Value() {}

func (*Stored_Config) isStored_Value() {}

type DataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScopePattern  string                 `protobuf:"bytes,1,opt,name=scope_pattern,json=scopePattern,proto3" json:"scope_pattern,omitempty"`
	NamePattern   string                 `protobuf:"bytes,2,opt,name=name_pattern,json=namePattern,proto3" json:"name_pattern,omitempty"`
	FileOffset    uint64                 `protobuf:"varint,3,opt,name=file_offset,json=fileOffset,proto3" json:"file_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataRequest) Reset() {
	*x = DataRequest{}
	mi := &file_streamvis_v1_data_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataRequest) ProtoMessage() {}

func (x *DataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataRequest.ProtoReflect.Descriptor instead.
func (*DataRequest) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{12}
}

func (x *DataRequest) GetScopePattern() string {
	if x != nil {
		return x.ScopePattern
	}
	return ""
}

func (x *DataRequest) GetNamePattern() string {
	if x != nil {
		return x.NamePattern
	}
	return ""
}

func (x *DataRequest) GetFileOffset() uint64 {
	if x != nil {
		return x.FileOffset
	}
	return 0
}

type RecordResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scopes        map[uint32]*Scope      `protobuf:"bytes,1,rep,name=scopes,proto3" json:"scopes,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Names         map[uint32]*Name       `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FileOffset    uint64                 `protobuf:"varint,3,opt,name=file_offset,json=fileOffset,proto3" json:"file_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordResult) Reset() {
	*x = RecordResult{}
	mi := &file_streamvis_v1_data_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordResult) ProtoMessage() {}

func (x *RecordResult) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordResult.ProtoReflect.Descriptor instead.
func (*RecordResult) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{13}
}

func (x *RecordResult) GetScopes() map[uint32]*Scope {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *RecordResult) GetNames() map[uint32]*Name {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *RecordResult) GetFileOffset() uint64 {
	if x != nil {
		return x.FileOffset
	}
	return 0
}

type ScopeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScopeRequest) Reset() {
	*x = ScopeRequest{}
	mi := &file_streamvis_v1_data_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeRequest) ProtoMessage() {}

func (x *ScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeRequest.ProtoReflect.Descriptor instead.
func (*ScopeRequest) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{14}
}

type ScopeResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScopeResult) Reset() {
	*x = ScopeResult{}
	mi := &file_streamvis_v1_data_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScopeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeResult) ProtoMessage() {}

func (x *ScopeResult) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeResult.ProtoReflect.Descriptor instead.
func (*ScopeResult) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{15}
}

func (x *ScopeResult) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type NamesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamesRequest) Reset() {
	*x = NamesRequest{}
	mi := &file_streamvis_v1_data_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamesRequest) ProtoMessage() {}

func (x *NamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamesRequest.ProtoReflect.Descriptor instead.
func (*NamesRequest) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{16}
}

func (x *NamesRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type ConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	mi := &file_streamvis_v1_data_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{17}
}

func (x *ConfigRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type ConfigResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*ConfigResult_Index
	//	*ConfigResult_Config
	Value         isConfigResult_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigResult) Reset() {
	*x = ConfigResult{}
	mi := &file_streamvis_v1_data_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResult) ProtoMessage() {}

func (x *ConfigResult) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResult.ProtoReflect.Descriptor instead.
func (*ConfigResult) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{18}
}

func (x *ConfigResult) GetValue() isConfigResult_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ConfigResult) GetIndex() *RecordResult {
	if x != nil {
		if x, ok := x.Value.(*ConfigResult_Index); ok {
			return x.Index
		}
	}
	return nil
}

func (x *ConfigResult) GetConfig() *Config {
	if x != nil {
		if x, ok := x.Value.(*ConfigResult_Config); ok {
			return x.Config
		}
	}
	return nil
}

type isConfigResult_Value interface {
	isConfigResult_Value()
}

type ConfigResult_Index struct {
	Index *RecordResult `protobuf:"bytes,1,opt,name=index,proto3,oneof"`
}

type ConfigResult_Config struct {
	Config *Config `protobuf:"bytes,2,opt,name=config,proto3,oneof"`
}

func (*ConfigResult_Index) isConfigResult_Value() {}

func (*ConfigResult_Config) isConfigResult_Value() {}

type Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tag) Reset() {
	*x = Tag{}
	mi := &file_streamvis_v1_data_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{19}
}

func (x *Tag) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Streamed struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*Streamed_Index
	//	*Streamed_Data
	//	*Streamed_Name
	//	*Streamed_Config
	//	*Streamed_Tag
	Value         isStreamed_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Streamed) Reset() {
	*x = Streamed{}
	mi := &file_streamvis_v1_data_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Streamed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Streamed) ProtoMessage() {}

func (x *Streamed) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Streamed.ProtoReflect.Descriptor instead.
func (*Streamed) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{20}
}

func (x *Streamed) GetValue() isStreamed_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Streamed) GetIndex() *RecordResult {
	if x != nil {
		if x, ok := x.Value.(*Streamed_Index); ok {
			return x.Index
		}
	}
	return nil
}

func (x *Streamed) GetData() *Data {
	if x != nil {
		if x, ok := x.Value.(*Streamed_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *Streamed) GetName() *Name {
	if x != nil {
		if x, ok := x.Value.(*Streamed_Name); ok {
			return x.Name
		}
	}
	return nil
}

func (x *Streamed) GetConfig() *Config {
	if x != nil {
		if x, ok := x.Value.(*Streamed_Config); ok {
			return x.Config
		}
	}
	return nil
}

func (x *Streamed) GetTag() *Tag {
	if x != nil {
		if x, ok := x.Value.(*Streamed_Tag); ok {
			return x.Tag
		}
	}
	return nil
}

type isStreamed_Value interface {
	isStreamed_Value()
}

type Streamed_Index struct {
	Index *RecordResult `protobuf:"bytes,1,opt,name=index,proto3,oneof"`
}

type Streamed_Data struct {
	Data *Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

type Streamed_Name struct {
	Name *Name `protobuf:"bytes,3,opt,name=name,proto3,oneof"`
}

type Streamed_Config struct {
	Config *Config `protobuf:"bytes,4,opt,name=config,proto3,oneof"`
}

type Streamed_Tag struct {
	Tag *Tag `protobuf:"bytes,5,opt,name=tag,proto3,oneof"`
}

func (*Streamed_Index) isStreamed_Value() {}

func (*Streamed_Data) isStreamed_Value() {}

func (*Streamed_Name) isStreamed_Value() {}

func (*Streamed_Config) isStreamed_Value() {}

func (*Streamed_Tag) isStreamed_Value() {}

type DataResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*DataResult_Record
	//	*DataResult_Data
	Value         isDataResult_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataResult) Reset() {
	*x = DataResult{}
	mi := &file_streamvis_v1_data_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataResult) ProtoMessage() {}

func (x *DataResult) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataResult.ProtoReflect.Descriptor instead.
func (*DataResult) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{21}
}

func (x *DataResult) GetValue() isDataResult_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *DataResult) GetRecord() *RecordResult {
	if x != nil {
		if x, ok := x.Value.(*DataResult_Record); ok {
			return x.Record
		}
	}
	return nil
}

func (x *DataResult) GetData() *Data {
	if x != nil {
		if x, ok := x.Value.(*DataResult_Data); ok {
			return x.Data
		}
	}
	return nil
}

type isDataResult_Value interface {
	isDataResult_Value()
}

type DataResult_Record struct {
	Record *RecordResult `protobuf:"bytes,1,opt,name=record,proto3,oneof"`
}

type DataResult_Data struct {
	Data *Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*DataResult_Record) isDataResult_Value() {}

func (*DataResult_Data) isDataResult_Value() {}

type WriteConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScopeId       uint32                 `protobuf:"varint,1,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty"`
	Attributes    *structpb.Struct       `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteConfigRequest) Reset() {
	*x = WriteConfigRequest{}
	mi := &file_streamvis_v1_data_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteConfigRequest) ProtoMessage() {}

func (x *WriteConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteConfigRequest.ProtoReflect.Descriptor instead.
func (*WriteConfigRequest) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{22}
}

func (x *WriteConfigRequest) GetScopeId() uint32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

func (x *WriteConfigRequest) GetAttributes() *structpb.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type WriteScopeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteScopeRequest) Reset() {
	*x = WriteScopeRequest{}
	mi := &file_streamvis_v1_data_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteScopeRequest) ProtoMessage() {}

func (x *WriteScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteScopeRequest.ProtoReflect.Descriptor instead.
func (*WriteScopeRequest) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{23}
}

func (x *WriteScopeRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type WriteNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []*Name                `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteNameRequest) Reset() {
	*x = WriteNameRequest{}
	mi := &file_streamvis_v1_data_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteNameRequest) ProtoMessage() {}

func (x *WriteNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteNameRequest.ProtoReflect.Descriptor instead.
func (*WriteNameRequest) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{24}
}

func (x *WriteNameRequest) GetNames() []*Name {
	if x != nil {
		return x.Names
	}
	return nil
}

type DeleteTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Names         []string               `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTagRequest) Reset() {
	*x = DeleteTagRequest{}
	mi := &file_streamvis_v1_data_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagRequest) ProtoMessage() {}

func (x *DeleteTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagRequest.ProtoReflect.Descriptor instead.
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteTagRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *DeleteTagRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type DeleteTagResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTagResponse) Reset() {
	*x = DeleteTagResponse{}
	mi := &file_streamvis_v1_data_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagResponse) ProtoMessage() {}

func (x *DeleteTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagResponse.ProtoReflect.Descriptor instead.
func (*DeleteTagResponse) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{26}
}

type WriteDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Datas         []*Data                `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteDataRequest) Reset() {
	*x = WriteDataRequest{}
	mi := &file_streamvis_v1_data_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteDataRequest) ProtoMessage() {}

func (x *WriteDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteDataRequest.ProtoReflect.Descriptor instead.
func (*WriteDataRequest) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{27}
}

func (x *WriteDataRequest) GetDatas() []*Data {
	if x != nil {
		return x.Datas
	}
	return nil
}

type WriteDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteDataResponse) Reset() {
	*x = WriteDataResponse{}
	mi := &file_streamvis_v1_data_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteDataResponse) ProtoMessage() {}

func (x *WriteDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteDataResponse.ProtoReflect.Descriptor instead.
func (*WriteDataResponse) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{28}
}

type WriteScopeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScopeId       uint32                 `protobuf:"varint,1,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteScopeResponse) Reset() {
	*x = WriteScopeResponse{}
	mi := &file_streamvis_v1_data_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteScopeResponse) ProtoMessage() {}

func (x *WriteScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteScopeResponse.ProtoReflect.Descriptor instead.
func (*WriteScopeResponse) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{29}
}

func (x *WriteScopeResponse) GetScopeId() uint32 {
	if x != nil {
		return x.ScopeId
	}
	return 0
}

type WriteNameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []*Name                `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteNameResponse) Reset() {
	*x = WriteNameResponse{}
	mi := &file_streamvis_v1_data_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteNameResponse) ProtoMessage() {}

func (x *WriteNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteNameResponse.ProtoReflect.Descriptor instead.
func (*WriteNameResponse) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{30}
}

func (x *WriteNameResponse) GetNames() []*Name {
	if x != nil {
		return x.Names
	}
	return nil
}

type WriteConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteConfigResponse) Reset() {
	*x = WriteConfigResponse{}
	mi := &file_streamvis_v1_data_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteConfigResponse) ProtoMessage() {}

func (x *WriteConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streamvis_v1_data_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteConfigResponse.ProtoReflect.Descriptor instead.
func (*WriteConfigResponse) Descriptor() ([]byte, []int) {
	return file_streamvis_v1_data_proto_rawDescGZIP(), []int{31}
}

var File_streamvis_v1_data_proto protoreflect.FileDescriptor

const file_streamvis_v1_data_proto_rawDesc = "" +
	"\n" +
	"\x17streamvis/v1/data.proto\x12\fstreamvis.v1\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"H\n" +
	"\x05Field\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12+\n" +
	"\x04type\x18\x02 \x01(\x0e2\x17.streamvis.v1.FieldTypeR\x04type\"%\n" +
	"\tFloatList\x12\x18\n" +
	"\x05value\x18\x01 \x03(\x02B\x02\x10\x01R\x05value\"#\n" +
	"\aIntList\x12\x18\n" +
	"\x05value\x18\x01 \x03(\x05B\x02\x10\x01R\x05value\"p\n" +
	"\x06Values\x121\n" +
	"\x06floats\x18\x02 \x01(\v2\x17.streamvis.v1.FloatListH\x00R\x06floats\x12+\n" +
	"\x04ints\x18\x03 \x01(\v2\x15.streamvis.v1.IntListH\x00R\x04intsB\x06\n" +
	"\x04data\"h\n" +
	"\x05Scope\x12\x19\n" +
	"\bscope_id\x18\x01 \x01(\rR\ascopeId\x12\x14\n" +
	"\x05scope\x18\x02 \x01(\tR\x05scope\x12.\n" +
	"\x04time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\"{\n" +
	"\x04Name\x12\x17\n" +
	"\aname_id\x18\x01 \x01(\rR\x06nameId\x12\x19\n" +
	"\bscope_id\x18\x02 \x01(\rR\ascopeId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12+\n" +
	"\x06fields\x18\x04 \x03(\v2\x13.streamvis.v1.FieldR\x06fields\"a\n" +
	"\aControl\x12\x14\n" +
	"\x05scope\x18\x01 \x01(\tR\x05scope\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12,\n" +
	"\x06action\x18\x03 \x01(\x0e2\x14.streamvis.v1.ActionR\x06action\"}\n" +
	"\tDataEntry\x12\x19\n" +
	"\bentry_id\x18\x01 \x01(\rR\aentryId\x12\x17\n" +
	"\aname_id\x18\x02 \x01(\rR\x06nameId\x12\x1d\n" +
	"\n" +
	"beg_offset\x18\x03 \x01(\x04R\tbegOffset\x12\x1d\n" +
	"\n" +
	"end_offset\x18\x04 \x01(\x04R\tendOffset\"\x81\x01\n" +
	"\vConfigEntry\x12\x19\n" +
	"\bentry_id\x18\x01 \x01(\rR\aentryId\x12\x19\n" +
	"\bscope_id\x18\x02 \x01(\rR\ascopeId\x12\x1d\n" +
	"\n" +
	"beg_offset\x18\x03 \x01(\x04R\tbegOffset\x12\x1d\n" +
	"\n" +
	"end_offset\x18\x04 \x01(\x04R\tendOffset\"z\n" +
	"\x04Data\x12\x19\n" +
	"\bentry_id\x18\x01 \x01(\rR\aentryId\x12\x14\n" +
	"\x05index\x18\x02 \x01(\rR\x05index\x12(\n" +
	"\x04axes\x18\x03 \x03(\v2\x14.streamvis.v1.ValuesR\x04axes\x12\x17\n" +
	"\aname_id\x18\x04 \x01(\rR\x06nameId\"w\n" +
	"\x06Config\x12\x19\n" +
	"\bentry_id\x18\x01 \x01(\rR\aentryId\x127\n" +
	"\n" +
	"attributes\x18\x02 \x01(\v2\x17.google.protobuf.StructR\n" +
	"attributes\x12\x19\n" +
	"\bscope_id\x18\x03 \x01(\rR\ascopeId\"\xef\x02\n" +
	"\x06Stored\x12+\n" +
	"\x05scope\x18\x01 \x01(\v2\x13.streamvis.v1.ScopeH\x00R\x05scope\x12(\n" +
	"\x04name\x18\x02 \x01(\v2\x12.streamvis.v1.NameH\x00R\x04name\x121\n" +
	"\acontrol\x18\x03 \x01(\v2\x15.streamvis.v1.ControlH\x00R\acontrol\x128\n" +
	"\n" +
	"data_entry\x18\x04 \x01(\v2\x17.streamvis.v1.DataEntryH\x00R\tdataEntry\x12>\n" +
	"\fconfig_entry\x18\x05 \x01(\v2\x19.streamvis.v1.ConfigEntryH\x00R\vconfigEntry\x12(\n" +
	"\x04data\x18\x06 \x01(\v2\x12.streamvis.v1.DataH\x00R\x04data\x12.\n" +
	"\x06config\x18\a \x01(\v2\x14.streamvis.v1.ConfigH\x00R\x06configB\a\n" +
	"\x05value\"v\n" +
	"\vDataRequest\x12#\n" +
	"\rscope_pattern\x18\x01 \x01(\tR\fscopePattern\x12!\n" +
	"\fname_pattern\x18\x02 \x01(\tR\vnamePattern\x12\x1f\n" +
	"\vfile_offset\x18\x03 \x01(\x04R\n" +
	"fileOffset\"\xca\x02\n" +
	"\fRecordResult\x12>\n" +
	"\x06scopes\x18\x01 \x03(\v2&.streamvis.v1.RecordResult.ScopesEntryR\x06scopes\x12;\n" +
	"\x05names\x18\x02 \x03(\v2%.streamvis.v1.RecordResult.NamesEntryR\x05names\x12\x1f\n" +
	"\vfile_offset\x18\x03 \x01(\x04R\n" +
	"fileOffset\x1aN\n" +
	"\vScopesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12)\n" +
	"\x05value\x18\x02 \x01(\v2\x13.streamvis.v1.ScopeR\x05value:\x028\x01\x1aL\n" +
	"\n" +
	"NamesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.streamvis.v1.NameR\x05value:\x028\x01\"\x0e\n" +
	"\fScopeRequest\"#\n" +
	"\vScopeResult\x12\x14\n" +
	"\x05scope\x18\x01 \x01(\tR\x05scope\"$\n" +
	"\fNamesRequest\x12\x14\n" +
	"\x05scope\x18\x01 \x01(\tR\x05scope\"%\n" +
	"\rConfigRequest\x12\x14\n" +
	"\x05scope\x18\x01 \x01(\tR\x05scope\"{\n" +
	"\fConfigResult\x122\n" +
	"\x05index\x18\x01 \x01(\v2\x1a.streamvis.v1.RecordResultH\x00R\x05index\x12.\n" +
	"\x06config\x18\x02 \x01(\v2\x14.streamvis.v1.ConfigH\x00R\x06configB\a\n" +
	"\x05value\"/\n" +
	"\x03Tag\x12\x14\n" +
	"\x05scope\x18\x01 \x01(\tR\x05scope\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\xf2\x01\n" +
	"\bStreamed\x122\n" +
	"\x05index\x18\x01 \x01(\v2\x1a.streamvis.v1.RecordResultH\x00R\x05index\x12(\n" +
	"\x04data\x18\x02 \x01(\v2\x12.streamvis.v1.DataH\x00R\x04data\x12(\n" +
	"\x04name\x18\x03 \x01(\v2\x12.streamvis.v1.NameH\x00R\x04name\x12.\n" +
	"\x06config\x18\x04 \x01(\v2\x14.streamvis.v1.ConfigH\x00R\x06config\x12%\n" +
	"\x03tag\x18\x05 \x01(\v2\x11.streamvis.v1.TagH\x00R\x03tagB\a\n" +
	"\x05value\"u\n" +
	"\n" +
	"DataResult\x124\n" +
	"\x06record\x18\x01 \x01(\v2\x1a.streamvis.v1.RecordResultH\x00R\x06record\x12(\n" +
	"\x04data\x18\x02 \x01(\v2\x12.streamvis.v1.DataH\x00R\x04dataB\a\n" +
	"\x05value\"h\n" +
	"\x12WriteConfigRequest\x12\x19\n" +
	"\bscope_id\x18\x01 \x01(\rR\ascopeId\x127\n" +
	"\n" +
	"attributes\x18\x02 \x01(\v2\x17.google.protobuf.StructR\n" +
	"attributes\")\n" +
	"\x11WriteScopeRequest\x12\x14\n" +
	"\x05scope\x18\x01 \x01(\tR\x05scope\"<\n" +
	"\x10WriteNameRequest\x12(\n" +
	"\x05names\x18\x01 \x03(\v2\x12.streamvis.v1.NameR\x05names\">\n" +
	"\x10DeleteTagRequest\x12\x14\n" +
	"\x05scope\x18\x01 \x01(\tR\x05scope\x12\x14\n" +
	"\x05names\x18\x02 \x03(\tR\x05names\"\x13\n" +
	"\x11DeleteTagResponse\"<\n" +
	"\x10WriteDataRequest\x12(\n" +
	"\x05datas\x18\x01 \x03(\v2\x12.streamvis.v1.DataR\x05datas\"\x13\n" +
	"\x11WriteDataResponse\"/\n" +
	"\x12WriteScopeResponse\x12\x19\n" +
	"\bscope_id\x18\x01 \x01(\rR\ascopeId\"=\n" +
	"\x11WriteNameResponse\x12(\n" +
	"\x05names\x18\x01 \x03(\v2\x12.streamvis.v1.NameR\x05names\"\x15\n" +
	"\x13WriteConfigResponse*Q\n" +
	"\tFieldType\x12\x1a\n" +
	"\x16FIELD_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10FIELD_TYPE_FLOAT\x10\x01\x12\x12\n" +
	"\x0eFIELD_TYPE_INT\x10\x02*Q\n" +
	"\x06Action\x12\x16\n" +
	"\x12ACTION_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13ACTION_DELETE_SCOPE\x10\x01\x12\x16\n" +
	"\x12ACTION_DELETE_NAME\x10\x022\xa7\x05\n" +
	"\aService\x12B\n" +
	"\tQueryData\x12\x19.streamvis.v1.DataRequest\x1a\x18.streamvis.v1.DataResult0\x01\x12A\n" +
	"\x06Scopes\x12\x1a.streamvis.v1.ScopeRequest\x1a\x19.streamvis.v1.ScopeResult0\x01\x128\n" +
	"\x05Names\x12\x1a.streamvis.v1.NamesRequest\x1a\x11.streamvis.v1.Tag0\x01\x12D\n" +
	"\aConfigs\x12\x1b.streamvis.v1.ConfigRequest\x1a\x1a.streamvis.v1.ConfigResult0\x01\x12O\n" +
	"\n" +
	"WriteScope\x12\x1f.streamvis.v1.WriteScopeRequest\x1a .streamvis.v1.WriteScopeResponse\x12R\n" +
	"\vWriteConfig\x12 .streamvis.v1.WriteConfigRequest\x1a!.streamvis.v1.WriteConfigResponse\x12M\n" +
	"\n" +
	"WriteNames\x12\x1e.streamvis.v1.WriteNameRequest\x1a\x1f.streamvis.v1.WriteNameResponse\x12S\n" +
	"\x10DeleteScopeNames\x12\x1e.streamvis.v1.DeleteTagRequest\x1a\x1f.streamvis.v1.DeleteTagResponse\x12L\n" +
	"\tWriteData\x12\x1e.streamvis.v1.WriteDataRequest\x1a\x1f.streamvis.v1.WriteDataResponseB*Z(data-server/pb/streamvis/v1;streamvis_v1b\x06proto3"

var (
	file_streamvis_v1_data_proto_rawDescOnce sync.Once
	file_streamvis_v1_data_proto_rawDescData []byte
)

func file_streamvis_v1_data_proto_rawDescGZIP() []byte {
	file_streamvis_v1_data_proto_rawDescOnce.Do(func() {
		file_streamvis_v1_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_streamvis_v1_data_proto_rawDesc), len(file_streamvis_v1_data_proto_rawDesc)))
	})
	return file_streamvis_v1_data_proto_rawDescData
}

var file_streamvis_v1_data_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_streamvis_v1_data_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_streamvis_v1_data_proto_goTypes = []any{
	(FieldType)(0),                // 0: streamvis.v1.FieldType
	(Action)(0),                   // 1: streamvis.v1.Action
	(*Field)(nil),                 // 2: streamvis.v1.Field
	(*FloatList)(nil),             // 3: streamvis.v1.FloatList
	(*IntList)(nil),               // 4: streamvis.v1.IntList
	(*Values)(nil),                // 5: streamvis.v1.Values
	(*Scope)(nil),                 // 6: streamvis.v1.Scope
	(*Name)(nil),                  // 7: streamvis.v1.Name
	(*Control)(nil),               // 8: streamvis.v1.Control
	(*DataEntry)(nil),             // 9: streamvis.v1.DataEntry
	(*ConfigEntry)(nil),           // 10: streamvis.v1.ConfigEntry
	(*Data)(nil),                  // 11: streamvis.v1.Data
	(*Config)(nil),                // 12: streamvis.v1.Config
	(*Stored)(nil),                // 13: streamvis.v1.Stored
	(*DataRequest)(nil),           // 14: streamvis.v1.DataRequest
	(*RecordResult)(nil),          // 15: streamvis.v1.RecordResult
	(*ScopeRequest)(nil),          // 16: streamvis.v1.ScopeRequest
	(*ScopeResult)(nil),           // 17: streamvis.v1.ScopeResult
	(*NamesRequest)(nil),          // 18: streamvis.v1.NamesRequest
	(*ConfigRequest)(nil),         // 19: streamvis.v1.ConfigRequest
	(*ConfigResult)(nil),          // 20: streamvis.v1.ConfigResult
	(*Tag)(nil),                   // 21: streamvis.v1.Tag
	(*Streamed)(nil),              // 22: streamvis.v1.Streamed
	(*DataResult)(nil),            // 23: streamvis.v1.DataResult
	(*WriteConfigRequest)(nil),    // 24: streamvis.v1.WriteConfigRequest
	(*WriteScopeRequest)(nil),     // 25: streamvis.v1.WriteScopeRequest
	(*WriteNameRequest)(nil),      // 26: streamvis.v1.WriteNameRequest
	(*DeleteTagRequest)(nil),      // 27: streamvis.v1.DeleteTagRequest
	(*DeleteTagResponse)(nil),     // 28: streamvis.v1.DeleteTagResponse
	(*WriteDataRequest)(nil),      // 29: streamvis.v1.WriteDataRequest
	(*WriteDataResponse)(nil),     // 30: streamvis.v1.WriteDataResponse
	(*WriteScopeResponse)(nil),    // 31: streamvis.v1.WriteScopeResponse
	(*WriteNameResponse)(nil),     // 32: streamvis.v1.WriteNameResponse
	(*WriteConfigResponse)(nil),   // 33: streamvis.v1.WriteConfigResponse
	nil,                           // 34: streamvis.v1.RecordResult.ScopesEntry
	nil,                           // 35: streamvis.v1.RecordResult.NamesEntry
	(*timestamppb.Timestamp)(nil), // 36: google.protobuf.Timestamp
	(*structpb.Struct)(nil),       // 37: google.protobuf.Struct
}
var file_streamvis_v1_data_proto_depIdxs = []int32{
	0,  // 0: streamvis.v1.Field.type:type_name -> streamvis.v1.FieldType
	3,  // 1: streamvis.v1.Values.floats:type_name -> streamvis.v1.FloatList
	4,  // 2: streamvis.v1.Values.ints:type_name -> streamvis.v1.IntList
	36, // 3: streamvis.v1.Scope.time:type_name -> google.protobuf.Timestamp
	2,  // 4: streamvis.v1.Name.fields:type_name -> streamvis.v1.Field
	1,  // 5: streamvis.v1.Control.action:type_name -> streamvis.v1.Action
	5,  // 6: streamvis.v1.Data.axes:type_name -> streamvis.v1.Values
	37, // 7: streamvis.v1.Config.attributes:type_name -> google.protobuf.Struct
	6,  // 8: streamvis.v1.Stored.scope:type_name -> streamvis.v1.Scope
	7,  // 9: streamvis.v1.Stored.name:type_name -> streamvis.v1.Name
	8,  // 10: streamvis.v1.Stored.control:type_name -> streamvis.v1.Control
	9,  // 11: streamvis.v1.Stored.data_entry:type_name -> streamvis.v1.DataEntry
	10, // 12: streamvis.v1.Stored.config_entry:type_name -> streamvis.v1.ConfigEntry
	11, // 13: streamvis.v1.Stored.data:type_name -> streamvis.v1.Data
	12, // 14: streamvis.v1.Stored.config:type_name -> streamvis.v1.Config
	34, // 15: streamvis.v1.RecordResult.scopes:type_name -> streamvis.v1.RecordResult.ScopesEntry
	35, // 16: streamvis.v1.RecordResult.names:type_name -> streamvis.v1.RecordResult.NamesEntry
	15, // 17: streamvis.v1.ConfigResult.index:type_name -> streamvis.v1.RecordResult
	12, // 18: streamvis.v1.ConfigResult.config:type_name -> streamvis.v1.Config
	15, // 19: streamvis.v1.Streamed.index:type_name -> streamvis.v1.RecordResult
	11, // 20: streamvis.v1.Streamed.data:type_name -> streamvis.v1.Data
	7,  // 21: streamvis.v1.Streamed.name:type_name -> streamvis.v1.Name
	12, // 22: streamvis.v1.Streamed.config:type_name -> streamvis.v1.Config
	21, // 23: streamvis.v1.Streamed.tag:type_name -> streamvis.v1.Tag
	15, // 24: streamvis.v1.DataResult.record:type_name -> streamvis.v1.RecordResult
	11, // 25: streamvis.v1.DataResult.data:type_name -> streamvis.v1.Data
	37, // 26: streamvis.v1.WriteConfigRequest.attributes:type_name -> google.protobuf.Struct
	7,  // 27: streamvis.v1.WriteNameRequest.names:type_name -> streamvis.v1.Name
	11, // 28: streamvis.v1.WriteDataRequest.datas:type_name -> streamvis.v1.Data
	7,  // 29: streamvis.v1.WriteNameResponse.names:type_name -> streamvis.v1.Name
	6,  // 30: streamvis.v1.RecordResult.ScopesEntry.value:type_name -> streamvis.v1.Scope
	7,  // 31: streamvis.v1.RecordResult.NamesEntry.value:type_name -> streamvis.v1.Name
	14, // 32: streamvis.v1.Service.QueryData:input_type -> streamvis.v1.DataRequest
	16, // 33: streamvis.v1.Service.Scopes:input_type -> streamvis.v1.ScopeRequest
	18, // 34: streamvis.v1.Service.Names:input_type -> streamvis.v1.NamesRequest
	19, // 35: streamvis.v1.Service.Configs:input_type -> streamvis.v1.ConfigRequest
	25, // 36: streamvis.v1.Service.WriteScope:input_type -> streamvis.v1.WriteScopeRequest
	24, // 37: streamvis.v1.Service.WriteConfig:input_type -> streamvis.v1.WriteConfigRequest
	26, // 38: streamvis.v1.Service.WriteNames:input_type -> streamvis.v1.WriteNameRequest
	27, // 39: streamvis.v1.Service.DeleteScopeNames:input_type -> streamvis.v1.DeleteTagRequest
	29, // 40: streamvis.v1.Service.WriteData:input_type -> streamvis.v1.WriteDataRequest
	23, // 41: streamvis.v1.Service.QueryData:output_type -> streamvis.v1.DataResult
	17, // 42: streamvis.v1.Service.Scopes:output_type -> streamvis.v1.ScopeResult
	21, // 43: streamvis.v1.Service.Names:output_type -> streamvis.v1.Tag
	20, // 44: streamvis.v1.Service.Configs:output_type -> streamvis.v1.ConfigResult
	31, // 45: streamvis.v1.Service.WriteScope:output_type -> streamvis.v1.WriteScopeResponse
	33, // 46: streamvis.v1.Service.WriteConfig:output_type -> streamvis.v1.WriteConfigResponse
	32, // 47: streamvis.v1.Service.WriteNames:output_type -> streamvis.v1.WriteNameResponse
	28, // 48: streamvis.v1.Service.DeleteScopeNames:output_type -> streamvis.v1.DeleteTagResponse
	30, // 49: streamvis.v1.Service.WriteData:output_type -> streamvis.v1.WriteDataResponse
	41, // [41:50] is the sub-list for method output_type
	32, // [32:41] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_streamvis_v1_data_proto_init() }
func file_streamvis_v1_data_proto_init() {
	if File_streamvis_v1_data_proto != nil {
		return
	}
	file_streamvis_v1_data_proto_msgTypes[3].OneofWrappers = []any{
		(*Values_Floats)(nil),
		(*Values_Ints)(nil),
	}
	file_streamvis_v1_data_proto_msgTypes[11].OneofWrappers = []any{
		(*Stored_Scope)(nil),
		(*Stored_Name)(nil),
		(*Stored_Control)(nil),
		(*Stored_DataEntry)(nil),
		(*Stored_ConfigEntry)(nil),
		(*Stored_Data)(nil),
		(*Stored_Config)(nil),
	}
	file_streamvis_v1_data_proto_msgTypes[18].OneofWrappers = []any{
		(*ConfigResult_Index)(nil),
		(*ConfigResult_Config)(nil),
	}
	file_streamvis_v1_data_proto_msgTypes[20].OneofWrappers = []any{
		(*Streamed_Index)(nil),
		(*Streamed_Data)(nil),
		(*Streamed_Name)(nil),
		(*Streamed_Config)(nil),
		(*Streamed_Tag)(nil),
	}
	file_streamvis_v1_data_proto_msgTypes[21].OneofWrappers = []any{
		(*DataResult_Record)(nil),
		(*DataResult_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_streamvis_v1_data_proto_rawDesc), len(file_streamvis_v1_data_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_streamvis_v1_data_proto_goTypes,
		DependencyIndexes: file_streamvis_v1_data_proto_depIdxs,
		EnumInfos:         file_streamvis_v1_data_proto_enumTypes,
		MessageInfos:      file_streamvis_v1_data_proto_msgTypes,
	}.Build()
	File_streamvis_v1_data_proto = out.File
	file_streamvis_v1_data_proto_goTypes = nil
	file_streamvis_v1_data_proto_depIdxs = nil
}
